{
    "contents" : "library(runjags)\nlibrary(ggplot2)\n\nnumTrials = 2000\n\nexpectation.decay = .005\nexpectationexpectation.magnitudedecay = .6\n\noffset.decay = .0035\noffset.magnitude = 4\n\ncertainty.decay = .02\ncertainty.magnitude = .8\n\nSD = 1\n\n#Returns a random decimal from 0 to 1\nrandDec = function(){\n  runif(1, min = 0, max = 1)\n}\n\n#Returns 1 for positive values, -1 for negative values\nsignOf = function(n){\n  if(n > 0){\n    1\n  }else if (n < 0){\n    -1\n  }else{\n    0\n  }\n}\n\n#Generates 'value' 'percent' percent of the time, otherwise produces 'otherval'\ngenerateStim = function(percent, value, otherVal){\n  if(randDec() > percent){\n    value\n  } else{\n    otherVal\n  }\n}\n\n#Values for stimuli one are pressumed \nstim1.vals = numeric(numTrials)\n\n#Types of Lags for stim2\nconstant.stim2.lag = rep(1,numTrials)\nconsistant.stim2.lag = mapply(function(x){generateStim(.4, 1, rnorm(1, 1, SD))}, numeric(numTrials))\nrandom.stim2.lag = mapply(function(x){rnorm(1, 0, SD)}, numeric(numTrials))\nbimodal.stim2.lag = c(mapply(function(x){generateStim(.4, 1, rnorm(1, 1, SD))}, numeric(numTrials/2)), mapply(function(x){generateStim(.4, -1, rnorm(1, -1, SD))}, numeric(numTrials/2)))\n\n#Change condition.vals to be any of the above variables\ncondition.vals = bimodal.stim2.lag\n\nd <- data.frame(\n  S1.obj = stim1.vals,\n  S1.expectation = numeric(numTrials),\n  S1.offset = numeric(numTrials),\n  S1.subj = numeric(numTrials),\n\n  S2.obj = condition.vals,\n  S2.expectation = numeric(numTrials),\n  S2.certainty = rep(10,numTrials),\n  S2.offset = numeric(numTrials),\n  S2.subj = condition.vals\n)\n\nfor(i in 2:(numTrials-1)) {\n  d$S2.offset[i] = ((d$S2.offset[i-1]*(1-offset.decay)) + \n                         (dnorm(d$S2.obj[i], d$S1.obj[i], SD)*offset.decay)*signOf(d$S2.obj[i] - d$S1.obj[i])*offset.magnitude)\n  d$S2.subj[i] = ((d$S2.obj[i]*(d$S2.certainty[i])) + (d$S2.expectation[i]*(1-d$S2.certainty[i]))) - d$S2.offset[i]\n  d$S2.expectation[i+1] = (d$S2.expectation[i]*(1-expectation.decay)) + (d$S2.obj[i] * expectation.decay)\n  d$S2.certainty[i+1] = min(1, max(0,(d$S2.certainty[i]*(1-certainty.decay)) + (abs(d$S2.obj[i]-d$S2.expectation[i]))*certainty.decay*certainty.magnitude))\n\n}\n\nresults = data.frame(\n  d = d\n  )\n\ngraph = ggplot(results, aes(x = 1:(numTrials)))+\n  xlab(\"trial\")+\n  ylab(\"Time from first stimuli\")+\n  geom_line(aes(y = numeric(numTrials)), colour = \"black\", size = .5)+\n  geom_point(aes(y = d$S2.obj), colour = \"black\")+\n  #geom_line(aes(y = 1-d$S2.certainty), colour = \"red\", size = 3) + \n  geom_line(aes(y = d$S2.subj), colour = \"green\")+\n  geom_line(aes(y = d$S2.offset), colour = \"blue\", linetype = \"dashed\", size = 2)+\n  geom_line(aes(y = d$S2.expectation), colour = \"yellow\", size = (d$S2.certainty+1)*(d$S2.certainty+1)) + \n  theme(panel.background = element_rect(fill = 'gray')) + \n  xlim(1, numTrials-1)+ \n  ylim(-2.5, 2.5)",
    "created" : 1480436156688.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4049842584",
    "id" : "91D0CDAA",
    "lastKnownWriteTime" : 1481589717,
    "path" : "~/Desktop/Thesis New/LagAdaptation/main.R",
    "project_path" : "main.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}